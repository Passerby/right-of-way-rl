from drrl.network.data_server import DataServer


class DataClient:
    """
    traning server sample training data from data server.
    there are two types data server:
    plasma data server is running parallel with training server.
    local data server is running in training server.
    """

    def __init__(self, cfg):
        self.cfg = cfg
        self.data_id = None
        self.index = None
        self.receive_instance_num = 0

    def connect(self, index, device, team_id) -> None:
        """
        training server connect to plasma data server or create a local data server.
        """
        self.index = index
        self._local_data_server = DataServer(self.cfg, index, device, team_id)

    def sample_data(self, update_times, device):
        """
        generated by data set prepare_for_train.

        return: (dict)
        batch_data = {
                        "obs": (np.array) shape=[batch_size, obs size],
                        "actions: (np.array) shape=[batch_size, action size],
                    }

        wait_data_server_count (int)
        """
        batch_data = self._local_data_server.sample_data(update_times)
        return batch_data, 0
